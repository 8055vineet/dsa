Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.

A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself.


Apprach : 
Approach : In these type of problems use recursion ,using subpath function find the matched node value(on node ,on left subtree,on right subtree) and use helper function to find the matching 
tree traversal and subtree traversal

Solution

class Solution {
    public boolean helper(TreeNode root, TreeNode subRoot){
        if(root==null && subRoot==null)return true;
        
        if(root==null||subRoot==null)return false;
        if(root.val!=subRoot.val)return false;

        return helper(root.left,subRoot.left)&&helper(root.right,subRoot.right);

    }

    public boolean isSubtree(TreeNode root, TreeNode subRoot) {
        if(root==null)return false;

        return helper(root,subRoot)||isSubtree(root.left,subRoot)||isSubtree(root.right,subRoot);
    }
}
